name: "jaffle_shop"
# Specify a requirement on an _exact_ version of dbt
require-dbt-version: "0.14.4"
version: "0.1"
profile: "jaffle_shop"
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_modules"
  - "logs"

# Use hooks to grant permissions to SQL table readers
# https://docs.getdbt.com/docs/hooks

# example hook for audit tables before and after model runs
# models:
#   project-name:
#     pre-hook: "insert into _dbt.audit (event_name, event_timestamp, event_schema, event_model) values ( 'starting model deployment', getdate(), '{{this.schema}}', '{{this.name}}')"
#     post-hook: "insert into _dbt.audit (event_name, event_timestamp, event_schema, event_model) values ( 'completed model deployment', getdate(), '{{this.schema}}', '{{this.name}}')"

quoting:
  database: true # translates to gcp project
  identifier: true
  schema: true # translates to gcp dataset

# https://docs.getdbt.com/docs/configuring-incremental-models
models:
  persist_docs: #allows for docs to flow through to BigQuery console tables/views
    relation: true
  jaffle_shop:
    core:
      materialized: table #https://docs.getdbt.com/docs/materializations
      # schema: core # (uncomment if you create a dataset based on model sub directory)
    staging:
      materialized: view
      # example CLI commands for how to utilize tagged models
      # https://docs.getdbt.com/docs/tags#section-selecting-models-with-tags
      # Run all models tagged "nightly"
      # dbt run --model tag:nightly

      # Run all models tagged "nightly", except those that are tagged hourly
      # dbt run --model tag:nightly --exclude tag:hourly
      tags: ["staging", "hourly"]
